# -- general  ------------------------------------------
set -g default-terminal                          "tmux-256color"
set-option -a terminal-overrides ",*256col*:RGB" # 设置默认终端为彩色终端
setw -g xterm-keys on                            # 启用xterm按键模式，确保兼容性
set -s escape-time 0                             # 设置按键组合的等待时间为0毫秒
set -sg repeat-time 300                          # 设置重复按键的等待时间为300毫秒
set -s focus-events on                           # 启用焦点事件，支持在窗格间自动切换焦点
set -g mouse on                                  # 启用鼠标支持，允许使用鼠标来选择和滚动
set -sg exit-empty on                            # 窗口全部关闭时自动退出tmux
set -q -g status-utf8 on                         # 在状态栏中启用UTF-8编码，以支持Unicode字符
setw -q -g utf8 on                               # 启用UTF-8编码以支持Unicode字符
set -g visual-activity off                       # 禁用窗格内容更新时的可视提醒
setw -g monitor-activity off                     # 禁用活动监视器，防止自动切换窗格
setw -g monitor-bell off                         # 禁用窗格监视器响铃
set -g history-limit 10000                       # 设置历史记录的最大行数为10000行，增加历史记录容量
set -s set-clipboard                             on
set -g @continuum-restore 'on'                   # Last saved environment is automatically restored when tmux is started.
set -g status-position top

# -- prefix --------------------------------------------
set -g prefix C-f
unbind C-b                        # 解除原来的"C-b"作为prefix的绑定

# -- session creation ----------------------------------
bind C-n new-session

# -- display -------------------------------------------
set -g base-index 1              # 设置窗口和窗格的起始索引为1，而不是默认的0
setw -g pane-base-index 1        # 设置窗格的起始索引为1，而不是默认的0
setw -g automatic-rename on      # 在创建新窗格时，自动为窗格命名
set -g renumber-windows on       # 关闭窗口时，自动重新编号窗口，确保窗口号连续
set -g set-titles on             # 允许tmux设置终端标题，通常显示当前窗口的名称
set -g display-panes-time 2000   # 在窗格切换时显示指示器的持续时间为2000毫秒
set -g display-time 2000         # 显示提示信息的持续时间为2000毫秒
set -g status-interval 1         # 设置状态栏更新间隔为1秒

# -- control -------------------------------------------
# window management
bind -n M-t new-window -c "#{pane_current_path}"
bind -n M-T break-pane
bind -n M-q kill-pane

# window navigation
unbind n
unbind p
unbind 1
unbind 2
unbind 3
unbind 4
unbind 6
unbind 5
unbind 7
unbind 8
unbind 9
unbind 0

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

bind -n M-! join-pane -t :1
bind -n M-@ join-pane -t :2
bind -n 'M-#' join-pane -t :3
bind -n 'M-$' join-pane -t :4
bind -n M-% join-pane -t :5
bind -n M-^ join-pane -t :6
bind -n M-& join-pane -t :7
bind -n M-* join-pane -t :8
bind -n M-( join-pane -t :9

bind k split-window -vb -c "#{pane_current_path}"
bind j split-window -v -c "#{pane_current_path}"
bind h split-window -hb -c "#{pane_current_path}"
bind l split-window -h -c "#{pane_current_path}"

bind -n M-f resize-pane -Z

# pane navigation
bind 1 select-pane -t:.1
bind 2 select-pane -t:.2
bind 3 select-pane -t:.3
bind 4 select-pane -t:.4
bind 5 select-pane -t:.5
bind 6 select-pane -t:.6
bind 7 select-pane -t:.7
bind 8 select-pane -t:.8
bind 9 select-pane -t:.9
bind 0 select-pane -t:.10

bind -n M-Space next-layout

bind W choose-tree -Z
bind S choose-tree 'move-pane -v -s "%%"'
bind V choose-tree 'move-pane -h -s "%%"'

set -g status-keys emacs
set -g mode-keys vi

# -- copy-mode -----------------------------------------
bind -n M-v copy-mode

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi K send-keys -N 5 -X cursor-up
bind -T copy-mode-vi J send-keys -N 5 -X cursor-down
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi G send-keys -X end-of-line
bind -T copy-mode-vi Escape send-keys -X cancel

# -- trivial -------------------------------------------
# -- toggle_syn_input
bind C-g if-shell '[[ $(tmux showw synchronize-panes | cut -d\  -f2) == "on" ]]' \
'setw synchronize-panes off; set -g pane-border-style fg=magenta' \
'setw synchronize-panes on; set -g pane-border-style fg=red'

# -- toggle_status
bind s if-shell '[[ $(tmux show -g status | cut -d\  -f2) == "on" ]]' \
'set -g status off' \
'set -g status on'

# -- tmux plugin for neovim
# -- navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'
# -- resize
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-Left'  if-shell "$is_vim" 'send-keys C-Left'  'resize-pane -L 1'
bind -n 'C-Down'  if-shell "$is_vim" 'send-keys C-Down'  'resize-pane -D 1'
bind -n 'C-Up'    if-shell "$is_vim" 'send-keys C-Up'    'resize-pane -U 1'
bind -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right' 'resize-pane -R 1'
bind-key -T copy-mode-vi  'C-Left'  resize-pane -L 1
bind-key -T copy-mode-vi  'C-Down'  resize-pane -D 1
bind-key -T copy-mode-vi  'C-Up'    resize-pane -U 1
bind-key -T copy-mode-vi  'C-Right' resize-pane -R 1

# -- tpm -----------------------------------------------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'egel/tmux-gruvbox'
set -g @tmux-gruvbox 'dark' # or 'light', 'dark-transparent', 'light-transparent'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
